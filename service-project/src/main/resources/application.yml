logging:
    level:
#        tk.mybatis: DEBUG
        com.service.service: DEBUG
spring:
    application:
        name: service-project
#    jackson:
#        date-format: yyyy-MM-dd HH:mm:ss
#        time-zone: GMT+8
#        default-property-inclusion: non_null
    datasource:
        name: test
        url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/dk_project?useUnicode=true&characterEncoding=UTF8&useSSL=true
        username: root
        password: 123456
#        url: jdbc:oracle:thin:@${ORACLE_HOST:localhost}:${ORACLE_PORT:1521}:WORKHUB
#        username: yzq8023
#        password: 123456
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
#        driver-class-name: oracle.jdbc.driver.OracleDriver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
    rabbitmq:
        host: ${RABBIT_MQ_HOST:localhost}
        port:  ${RABBIT_MQ_PORT:5672}
        username: guest
        password: guest
    sleuth:
      sampler:
        percentage: 1

sample:
  zipkin:
    # When enabled=false, traces log to the console. Comment to send to zipkin
    enabled: false

mybatis:
    basepackage: com.service.service.mapper
    xmlLocation: classpath:mapper/**/*.xml
    mapper-locations: "classpath*:mapper/*.xml"
    type-handlers-package: com.service.service.handler.impl

server:
    port: 8764


eureka:
    instance:
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        # docker 部署开启
        prefer-ip-address: true
        ip-address: 127.0.0.1
    client:
        serviceUrl:
#            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
# 必须配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 120000
  ConnectTimeout: 120000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 110000


# 配置swagger
swagger:
    enabled: true
    base-package: com.service.service
    title: service-project
    version: 1.0.0.SNAPSHOT
    description: 管理后端服务
    contact:
        name: project

auth:
  serviceId: ace-auth
  user:
    token-header: Authorization
  client:
    id: service-project
    secret: 123456
    token-header: client-token

#redis-cache 相关
redis:
    pool:
         maxActive: 300
         maxIdle: 100
         maxWait: 1000
    host: ${REDIS_HOST:localhost}
    port:  ${REDIS_PORT:6379}
    password:
    timeout: 2000
    # 服务或应用名
    sysName: service-project
    enable: true
    database: 0